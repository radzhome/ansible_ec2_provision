server {
    listen   80;
    server_name supersausage.ca www.supersausage.ca;
    root /var/web/ssausage;

    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/supersausage.ca/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/supersausage.ca/privkey.pem;

    # Redirects
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
    if ($host = www.supersausage.ca) {
        return 301 https://supersausage.ca$request_uri;
    }


    location /media/ {
	    alias /var/web/ssausage/media/;
        # if asset versioning is used
        if ($query_string) {
            expires max;
        }
        expires 365d;
        add_header Pragma public;
        add_header Cache-Control "public";

   }

   location /static/ {
       alias /var/web/ssausage/static_root/;
       expires 365d;
       add_header Pragma public;
       add_header Cache-Control "public";

    }

    location /.well-known/acme-challenge/ {
        alias /var/web/ssausage/.well-known/acme-challenge/;
        expires 365d;
        add_header Pragma public;
        add_header Cache-Control "public";

    }


    location / {
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_connect_timeout 10;
        proxy_read_timeout 10;
        proxy_pass http://localhost:8000/;
    }
    # what to serve if upstream is not available or crashes
    error_page 500 502 503 504 /media/50x.html;

    # REDIRECTS - remove after some time
    location /store/location/3/ {
        rewrite ^/store/location/3/$ /location/super-sausage-hamilton/ permanent;
    }
    location /store/location/2/ {
        rewrite ^/store/location/2/$ /location/sausage-place-brantford/ permanent;
    }
    location /store/specials/ {
        if ($args ~* "^l=(hamilton|brantford)$") {
            rewrite ^/store/specials/$ /specials/$arg_l/? permanent;
        }
    }


}